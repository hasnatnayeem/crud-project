{
    "openapi": "3.0.3",
    "info": {
        "version": "1.0.0",
        "title": "CRM Project Nayeem",
        "description": "Crud on Customer resource"
    },
    "servers": [
        {
            "url": "/v1/",
            "description": "CRM Server"
        }
    ],
    "tags": [
        {
            "name": "Customers",
            "description": "API for Customers in the system"
        }
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/customers": {
            "get": {
                "tags": [
                    "Customers"
                ],

                "parameters": [
                    {
                        "in": "query",
                        "name": "sortBy",
                        "type": "string",
                        "description": "Sort data by 'name' or 'createdDate'",
                        "schema": {
                            "type": "string",
                            "enum": ["name", "createdDate"]
                        }
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "type": "string",
                        "description": "Enter text to search by name, email or both",
                        "examples": {
                            "withoutSearching": {
                                "value": "",
                                "summary": "Without searching"
                            },
                            "name": {
                                "value": "name:nayeem",
                                "summary": "Search by name"
                            },
                            "email": {
                                "value": "email:gmail",
                                "summary": "Search by email"
                            },
                            "nameAndEmail": {
                                "value": "name:nayeem,email:gmail",
                                "summary": "Search by both name and email"
                            }
                        }
                    }
                ],
                "summary": "Get all Customers in system",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Create a new Customer in system",
                "requestBody": {
                    "description": "Customer Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Customer"
                            }
                        }
                    }
                },
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    }
                }
            }
        },
        "/customers/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "description": "ID of the Customer that we want to match",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Get Customer with given ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Customer with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    },
                    "404": {
                        "description": "Failed. Customer not found."
                    }
                }
            },
            "put": {
                "summary": "Update Customer with given ID",
                "tags": [
                    "Customers"
                ],
                "requestBody": {
                    "description": "Customer Object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/definitions/Customer"
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Customer with new values of properties",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Customer"
                        }
                    },
                    "400": {
                        "description": "Failed. Bad post data."
                    },
                    "404": {
                        "description": "Failed. Customer not found."
                    }
                }
            },
            "delete": {
                "summary": "Delete Customer with given ID",
                "tags": [
                    "Customers"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "description": "Delete Customer with id",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/id"
                        }
                    },
                    "404": {
                        "description": "Failed. Customer not found."
                    }
                }
            }
        }
    },
    "definitions": {
        "id": {
            "properties": {
                "uuid": {
                    "type": "string"
                }
            }
        },
        "Customer": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "zipCode": {
                    "type": "string"
                }
            }
        },
        "Customers": {
            "type": "object",
            "properties": {
                "Customers": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/Customer"
                    }
                }
            }
        }
    }
}